name: skyscope
services:
  web:
    image: skyscopeai/multi-chat-web
    build:
      context: ../../
      dockerfile: docker/web/Dockerfile
    restart: always
    environment:
      TRUST_DOWNSTREAM_PROXY: true
      DEFAULT_HOST: ${DOMAIN_NAME}
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - skyscope-chat-storage:/app/storage:ro
      - ../root:/app/storage/app/public/root:ro
    ports: ["80:80", "443:443"]
    depends_on: ["skyscope-chat"]
    networks: ["skyscope-network"]
    healthcheck:
      test: ["CMD-SHELL", "curl", "-f", "http://${DOMAIN_NAME}/"]
      timeout: 10s
    extra_hosts:
      - "host.docker.internal:host-gateway"
  
  skyscope-chat:
    image: skyscopeai/multi-chat
    build:
      context: ../../
      dockerfile: docker/multi-chat/Dockerfile
    restart: unless-stopped
    init: true
    depends_on:
      - skyscope-redis
    environment:
      # For nginx-proxy ("web" container) to generate configuration
      VIRTUAL_PROTO: fastcgi
      VIRTUAL_HOST_MULTIPORTS: |
        ${DOMAIN_NAME}:
          /index.php: {port: 9000}
          /app/: {port: 9001}
        web:
          /index.php: {port: 9000}
          /app/: {port: 9001}
      VIRTUAL_ROOT: /app/public
      VIRTUAL_PATH: /index.php
      
      APP_ENV: production
      APP_DEBUG: false
      APP_URL: ${PUBLIC_BASE_URL}

      # Use sqlite as the default database
      DB_CONNECTION: sqlite
      DB_DATABASE: /app/storage/database.sqlite

      ADMIN_NAME: ${ADMIN_NAME}
      ADMIN_EMAIL: ${ADMIN_EMAIL}
      ADMIN_PASSWORD_FILE: /run/secrets/admin-password
      NVIDIA_VISIBLE_DEVICES: all
    secrets:
      - admin-password
    volumes: 
      - skyscope-chat-storage:/app/storage:rw
      - ../root:/app/storage/app/public/root:rw
      - ../root:/var/skyscope/docker/root:rw
      - ../root/custom:/app/resources/views/components/custom:ro
      - ~/.cache/huggingface:/root/.cache/huggingface
    healthcheck:
      test: ["CMD-SHELL", "php-fpm-healthcheck"]
      timeout: 10s
    networks: ["skyscope-network"]

  skyscope-kernel:
    image: skyscopeai/kernel
    build:
      context: ../../
      dockerfile: docker/kernel/Dockerfile
    restart: unless-stopped
    networks: ["skyscope-network"]

  skyscope-redis:
    image: redis:6.0.20
    restart: always
    networks: ["skyscope-network"]

  skyscope-executor-builder:
    image: skyscopeai/model-executor
    build:
      context: ../../
      dockerfile: docker/executor/Dockerfile
      platforms:
        - "linux/amd64"
        # - "linux/arm64"
    depends_on:
      - skyscope-kernel
      - skyscope-chat
    entrypoint: /bin/bash -c
    command: ["echo Image builds completed."]

volumes:
  skyscope-chat-storage: {}
  skyscope-root: # The root of Skyscope filesystem hierarchy to store user-uploaded data during runtime.
    driver: local
    driver_opts:
      type: none
      device: "../root"
      o: bind

secrets:
  admin-password:
    file: ../.admin-password

networks:
  skyscope-network: {}